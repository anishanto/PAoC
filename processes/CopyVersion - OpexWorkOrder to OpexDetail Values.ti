#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****

#######################################Define Variables#######################################
cubGlobalControl = 'Global Control';
vServer=CELLGETS(cubGlobalControl, 'Client Server Name', 'String');
CubeName = 'Opex Work Order Cube';
ViewNameSource =  'VE-' | CubeName | '-CopyToDetail' ;
vSCur = 'Local';
ZCubeName = 'Opex Detail Cube';
ViewNameZero =  'VE-' | ZCubeName | '-DetailZero' ;
vSM = 'No Scale';
vRecNo = 0;
vCur='Local';

vSBLType = CELLGETN(cubGlobalControl, 'Client Subledger Type', 'Value');
vVendorType = CELLGETN(cubGlobalControl, 'Client Vendor Type', 'Value');

vFileName = 'WorkOrdersToDetailCubeLoadValue.csv';
vOuputLocationString = '..\DataSources\Exports\' | vFileName;

ASCIIOUTPUT(vOuputLocationString,'Test');

CUBESETLOGCHANGES(CubeName, 0);
CUBESETLOGCHANGES(ZCubeName, 0);

# Create source view

#  Destroy previous views and subsets for forecast transfer
ViewDestroy (CubeName, ViewNameSource);
SubsetDestroy ('Versions', ViewNameSource);
SubsetDestroy ('Company', ViewNameSource);
SubsetDestroy ('Currency', ViewNameSource);
SubsetDestroy ('Fiscal Months', ViewNameSource);
SubsetDestroy ('Fiscal Years', ViewNameSource);
SubsetDestroy ('SubAccounts', ViewNameSource);
SubsetDestroy ('GL_Accounts', ViewNameSource);
SubsetDestroy ('BusUnits', ViewNameSource);
SubsetDestroy ('Subledger', ViewNameSource);
SubsetDestroy ('Vendor', ViewNameSource);
SubsetDestroy ('Work Orders', ViewNameSource);
SubsetDestroy ('AP Status', ViewNameSource);
SubsetDestroy ('WO Status', ViewNameSource);
SubsetDestroy ('Corrigo Measures', ViewNameSource);

# Create views and subsets for Export
#Create Version
SubsetCreate ('Versions', ViewNameSource);
SubsetElementInsert ( 'Versions',  ViewNameSource, pSourceVersion, 1);

#Create Company
IF(pCompany @= 'All Companies') ;
	sMDX = '{TM1SORT( {TM1FILTERBYLEVEL( { HIERARCHIZE( {TM1SUBSETALL( [Company] )} ) }, 0)}, ASC)}';
ELSE;
	sMDX = '{TM1FILTERBYPATTERN( {TM1SUBSETALL( [Company] )}, "' |  pCompany | '")}';
ENDIF;
SubsetCreatebyMDX( ViewNameSource, sMDX);

#Create currency
sMDX = '{TM1SORT( {TM1FILTERBYLEVEL( { HIERARCHIZE( {TM1SUBSETALL( [Currency] )} ) }, 0)}, ASC)}';
SubsetCreatebyMDX( ViewNameSource, sMDX);

#Create Fiscal Months
vMonthStart = STRINGTONUMBER ( pMonthStart ) ;
vMonthEnd = STRINGTONUMBER ( pMonthEnd ) ;

#Create Months
i = vMonthStart ;
vMonthNum ='' ;
sMDX = '{ ' ;
WHILE ( i<= vMonthEnd ) ;
	IF ( i <10 ) ;
		vMonthNum = 'M0' | NUMBERTOSTRING ( i ) ;
	ELSE ;
        		vMonthNum = 'M' | NUMBERTOSTRING ( i ) ;
	ENDIF;

	sMDX = sMDX | '[Fiscal Months].[' | vMonthNum  | '] ' ;
	
	i = i + 1 ;

	IF ( i <= vMonthEnd ) ;
		sMDX = sMDX | ' , ' ; 
	ENDIF ;
END;

sMDX = sMDX | ' } ' ;
SubsetCreatebyMDX( ViewNameSource, sMDX);

# create year
SubsetCreate ('Fiscal Years', ViewNameSource);
SubsetElementInsert ( 'Fiscal Years',  ViewNameSource, pSourceYear, 1);

# create SubAccounts
sMDX = '{TM1SORT( {TM1FILTERBYLEVEL( { HIERARCHIZE( {TM1SUBSETALL( [SubAccounts] )} ) }, 0)}, ASC)}';
#SubsetCreatebyMDX(ViewNameSource,sMDX);
SubsetCreatebyMDX(ViewNameSource,sMDX);

#Create GL_Accounts
sMDX = '{TM1SORT( {TM1FILTERBYLEVEL( { HIERARCHIZE( {TM1SUBSETALL( [GL_Accounts] )} ) }, 0)}, ASC)}';
#SubsetCreatebyMDX( ViewNameSource, sMDX);
SubsetCreatebyMDX( ViewNameSource, sMDX);

#Create BusUnits
sMDX = '{TM1SORT( {TM1FILTERBYLEVEL( { HIERARCHIZE( {TM1SUBSETALL( [BusUnits] )} ) }, 0)}, ASC)}';
SubsetCreatebyMDX( ViewNameSource, sMDX);

#Create Subledger
sMDX = '{TM1SORT( {TM1FILTERBYLEVEL( { HIERARCHIZE( {TM1SUBSETALL( [Subledger] )} ) }, 0)}, ASC)}';
SubsetCreatebyMDX( ViewNameSource, sMDX);

#Create Vendor
sMDX = '{TM1SORT( {TM1FILTERBYLEVEL( { HIERARCHIZE( {TM1SUBSETALL( [Vendor] )} ) }, 0)}, ASC)}';
SubsetCreatebyMDX( ViewNameSource, sMDX);

#Create Work Orders
sMDX = '{TM1SORT( {TM1FILTERBYLEVEL( { HIERARCHIZE( {TM1SUBSETALL( [Work Orders] )} ) }, 0)}, ASC)}';
SubsetCreatebyMDX( ViewNameSource, sMDX);

#Create AP Status
sMDX = '{TM1SORT( {TM1FILTERBYLEVEL( { HIERARCHIZE( {TM1SUBSETALL( [AP Status] )} ) }, 0)}, ASC)}';
SubsetCreatebyMDX( ViewNameSource, sMDX);

#Create WO Status
sMDX = '{TM1SORT( {TM1FILTERBYLEVEL( { HIERARCHIZE( {TM1SUBSETALL( [WO Status] )} ) }, 0)}, ASC)}';
SubsetCreatebyMDX( ViewNameSource, sMDX);

#Corrigo Measures
sMDX = '{FILTER( {TM1SUBSETALL( [Corrigo Measures] )},[Corrigo Measures].[MeasureType] = "WO")}';
SubsetCreatebyMDX( ViewNameSource, sMDX);

ViewCreate( CubeName, ViewNameSource);
ViewSubsetAssign (CubeName, ViewNameSource, 'Versions', ViewNameSource);
ViewSubsetAssign (CubeName, ViewNameSource, 'Company', ViewNameSource);
ViewSubsetAssign (CubeName, ViewNameSource, 'Currency', ViewNameSource);
ViewSubsetAssign (CubeName, ViewNameSource, 'Fiscal Years', ViewNameSource);
ViewSubsetAssign (CubeName, ViewNameSource, 'Fiscal Months', ViewNameSource);
ViewSubsetAssign (CubeName, ViewNameSource, 'SubAccounts',ViewNameSource);
ViewSubsetAssign (CubeName, ViewNameSource, 'GL_Accounts', ViewNameSource);
ViewSubsetAssign (CubeName, ViewNameSource, 'BusUnits', ViewNameSource);
ViewSubsetAssign (CubeName, ViewNameSource, 'Subledger', ViewNameSource);
ViewSubsetAssign (CubeName, ViewNameSource, 'Vendor', ViewNameSource);
ViewSubsetAssign (CubeName, ViewNameSource, 'Work Orders', ViewNameSource);
ViewSubsetAssign (CubeName, ViewNameSource, 'AP Status', ViewNameSource);
ViewSubsetAssign (CubeName, ViewNameSource, 'WO Status', ViewNameSource);
ViewSubsetAssign (CubeName, ViewNameSource, 'Corrigo Measures', ViewNameSource);

ViewExtractSkipCalcsSet(CubeName, ViewNameSource, 0);
ViewExtractSkipZeroesSet(CubeName, ViewNameSource, 1);

# Set new views as the datasource:
DatasourceNameForServer = CubeName;
DatasourceCubeView = ViewNameSource;


#------------------Create Zero out view 

#  Destroy previous views and subsets for forecast transfer (in case they currently exist)
ViewDestroy (ZCubeName, ViewNameZero);
SubsetDestroy ('Versions_PM', ViewNameZero);
SubsetDestroy ('Currency_PM', ViewNameZero);
SubsetDestroy ('Fiscal Years', ViewNameZero);
SubsetDestroy ('Fiscal Months', ViewNameZero);
SubsetDestroy ('Company', ViewNameZero);
SubsetDestroy ('SubAccounts', ViewNameZero);
SubsetDestroy ('GL_Accounts', ViewNameZero);
SubsetDestroy ('Subledger', ViewNameZero);
SubsetDestroy ('BusUnits', ViewNameZero);
SubsetDestroy ('Vendor', ViewNameZero);
SubsetDestroy ('Detail Measures', ViewNameZero);

#################################### Create views and subsets for Export

#Create Versions_PM
SubsetCreate ('Versions_PM', ViewNameZero);
SubsetElementInsert ( 'Versions_PM',  ViewNameZero, pTargetVersion, 1);

#Create Currency_PM
SubsetCreate ('Currency_PM', ViewNameZero);
SubsetElementInsert ( 'Currency_PM',  ViewNameZero,'Local', 1);

#Create Fiscal Months
vMonthStart = STRINGTONUMBER ( pMonthStart ) ;
vMonthEnd = STRINGTONUMBER ( pMonthEnd ) ;

#Create Months
i = vMonthStart ;
vMonthNum ='' ;
sMDX = '{ ' ;
WHILE ( i<= vMonthEnd ) ;
	IF ( i <10 ) ;
		vMonthNum = 'M0' | NUMBERTOSTRING ( i ) ;
	ELSE ;
		vMonthNum = 'M' | NUMBERTOSTRING ( i ) ;
	ENDIF;
	
	sMDX = sMDX | '[Fiscal Months].[' | vMonthNum  | '] ' ;
	
	i = i + 1 ;
	
	IF ( i <= vMonthEnd ) ;
		sMDX = sMDX | ' , ' ; 
	ENDIF ;
END;
sMDX = sMDX | ' } ' ;
SubsetCreatebyMDX( ViewNameZero, sMDX);

#Create year
SubsetCreate ('Fiscal Years', ViewNameZero);
SubsetElementInsert ( 'Fiscal Years',  ViewNameZero, pTargetYear, 1);

#Create Company
IF(pCompany @= 'All Companies') ;
	sMDX = '{TM1SORT( {TM1FILTERBYLEVEL( { HIERARCHIZE( {TM1SUBSETALL( [Company] )} ) }, 0)}, ASC)}';
ELSE;
	sMDX = '{TM1FILTERBYPATTERN( {TM1SUBSETALL( [Company] )}, "' |  pCompany | '")}';
ENDIF;
SubsetCreatebyMDX( ViewNameZero, sMDX);

# create SubAccounts
sMDX = '{TM1SORT( {TM1FILTERBYLEVEL( { HIERARCHIZE( {TM1SUBSETALL( [SubAccounts] )} ) }, 0)}, ASC)}';
SubsetCreatebyMDX(ViewNameZero, sMDX,0);

#Create GL_Accounts
sMDX = '{TM1SORT( {TM1FILTERBYLEVEL( { HIERARCHIZE( {TM1SUBSETALL( [GL_Accounts] )} ) }, 0)}, ASC)}';
SubsetCreatebyMDX(ViewNameZero, sMDX);

#Create BusUnits
sMDX = '{TM1SORT( {TM1FILTERBYLEVEL( { HIERARCHIZE( {TM1SUBSETALL( [BusUnits] )} ) }, 0)}, ASC)}';
SubsetCreatebyMDX(ViewNameZero, sMDX);

#Create Subledger
sMDX = '{TM1SORT( {TM1FILTERBYLEVEL( { HIERARCHIZE( {TM1SUBSETALL( [Subledger] )} ) }, 0)}, ASC)}';
SubsetCreatebyMDX(ViewNameZero, sMDX);

#Create Vendor
sMDX = '{TM1SORT( {TM1FILTERBYLEVEL( { HIERARCHIZE( {TM1SUBSETALL( [Vendor] )} ) }, 0)}, ASC)}';
SubsetCreatebyMDX(ViewNameZero, sMDX);

#Create Measure
SubsetCreate ('Detail Measures', ViewNameZero);
SubsetElementInsert ( 'Detail Measures',  ViewNameZero,'Corrigo Closed WO', 1);
SubsetElementInsert ( 'Detail Measures',  ViewNameZero,'Corrigo Open WO', 1);

ViewCreate( ZCubeName, ViewNameZero);
ViewSubsetAssign (ZCubeName, ViewNameZero, 'Versions_PM', ViewNameZero);
ViewSubsetAssign (ZCubeName, ViewNameZero, 'Currency_PM', ViewNameZero);
ViewSubsetAssign (ZCubeName, ViewNameZero, 'Fiscal Years', ViewNameZero);
ViewSubsetAssign (ZCubeName, ViewNameZero, 'Fiscal Months', ViewNameZero);
ViewSubsetAssign (ZCubeName, ViewNameZero, 'Company', ViewNameZero);
ViewSubsetAssign (ZCubeName, ViewNameZero, 'SubAccounts',ViewNameZero);
ViewSubsetAssign (ZCubeName, ViewNameZero, 'GL_Accounts', ViewNameZero);
ViewSubsetAssign (ZCubeName, ViewNameZero, 'Subledger', ViewNameZero);
ViewSubsetAssign (ZCubeName, ViewNameZero, 'BusUnits', ViewNameZero);
ViewSubsetAssign (ZCubeName, ViewNameZero, 'Vendor', ViewNameZero);
ViewSubsetAssign (ZCubeName, ViewNameZero, 'Detail Measures', ViewNameZero);

ViewZeroOut(ZCubeName, ViewNameZero);
#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****



#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****

#SBL
vSBL = IF (vSBLType=0,'All Subledger and Other',vSBL);

#Vendor
vVendor = IF (vVendorType=0,'All Vendor and Other',vVendor);

IF(CellIsUpdateable(ZCubeName, pTargetVersion,vCur, pTargetYear, vFM, vCo, vSub,vGLA, vSBL, vBU,vVendor, vCorrigoMeasure)=1);
	IF (VALUE_IS_STRING=0);
		CellIncrementN(vValue,ZCubeName, pTargetVersion,vCur, pTargetYear, vFM, vCo,vSub,vGLA, vSBL, vBU, vVendor, vCorrigoMeasure);
	ELSE;
		ITEMSKIP;
	ENDIF;
ENDIF;

IF (vRecNo=0);
	ASCIIOUTPUT(vOuputLocationString,'Version','Currency', 'Fiscal Year', 'Fiscal Month', 'Company','Sub Account','GL Account', 'Subledger',  'Bus Unit', 'Vendor', 'Corrigo Measure', 'Value' );
ENDIF;

ASCIIOUTPUT(vOuputLocationString,pTargetVersion,vCur, pTargetYear, vFM, vCo,vSub,vGLA, vSBL, vBU,vVendor,  vCorrigoMeasure, NumberToString(vValue) );

vRecNo = vRecNo + 1;

#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****


CUBESETLOGCHANGES(CubeName, 1);
CUBESETLOGCHANGES(ZCubeName, 1);

IF( 1 = 1 );
#  Destroy previous views and subsets for forecast transfer

ViewDestroy (CubeName, ViewNameSource);
SubsetDestroy ('Versions', ViewNameSource);
SubsetDestroy ('Company', ViewNameSource);
SubsetDestroy ('Currency', ViewNameSource);
SubsetDestroy ('Fiscal Months', ViewNameSource);
SubsetDestroy ('Fiscal Years', ViewNameSource);
SubsetDestroy ('SubAccounts', ViewNameSource);
SubsetDestroy ('GL_Accounts', ViewNameSource);
SubsetDestroy ('BusUnits', ViewNameSource);
SubsetDestroy ('Subledger', ViewNameSource);
SubsetDestroy ('Vendor', ViewNameSource);
SubsetDestroy ('Work Orders', ViewNameSource);
SubsetDestroy ('AP Status', ViewNameSource);
SubsetDestroy ('WO Status', ViewNameSource);
SubsetDestroy ('Corrigo Measures', ViewNameSource);
ViewDestroy (ZCubeName, ViewNameZero);
SubsetDestroy ('Versions_PM', ViewNameZero);
SubsetDestroy ('Currency_PM', ViewNameZero);
SubsetDestroy ('Fiscal Years', ViewNameZero);
SubsetDestroy ('Fiscal Months', ViewNameZero);
SubsetDestroy ('SubAccounts', ViewNameZero);
SubsetDestroy ('GL_Accounts', ViewNameZero);
SubsetDestroy ('Subledger', ViewNameZero);
SubsetDestroy ('BusUnits', ViewNameZero);
SubsetDestroy ('Vendor', ViewNameZero);
SubsetDestroy ('Detail Measures', ViewNameZero);
ENDIF;
#endregion