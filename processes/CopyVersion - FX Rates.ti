#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****



vFileName = 'CopyFXRates.csv';
vOuputLocationString = '..\DataSources\Exports\' | vFileName;
# This process will copy the all the source Version values to another for the specified Year and range of Months
# Add the Target Version to the "Version_PM" dim first before executing this process

CubeName = 'Currency Exchange Cube';
ViewNameSource = 'VE-' | CubeName | '-zSource' ;
ViewNameZero =  'VE-' | CubeName | '-Zero' ;
vRecNo = 0;

CUBESETLOGCHANGES(CubeName, 0);

# create source view

#  Destroy previous views and subsets for forecast transfer
ViewDestroy (CubeName, ViewNameSource);
SubsetDestroy ('Versions', ViewNameSource);
SubsetDestroy ('Company', ViewNameSource);
SubsetDestroy ('Currency Type', ViewNameSource);
SubsetDestroy ('Currency From', ViewNameSource);
SubsetDestroy ('Currency To', ViewNameSource);
SubsetDestroy ('Fiscal Months', ViewNameSource);
SubsetDestroy ('Fiscal Years', ViewNameSource);
SubsetDestroy ('Currency Measures', ViewNameSource);

# Create views and subsets
#Create Version
SubsetCreate ('Versions', ViewNameSource);
SubsetElementInsert ( 'Versions',  ViewNameSource, pSourceVersion, 1);

#Create Company
sMDX = '{TM1FILTERBYLEVEL( {TM1SUBSETALL( [Company] )}, 0)}';
SubsetCreatebyMDX( ViewNameSource, sMDX);

#Create Currency Type
SubsetCreate ('CurrencyType', ViewNameSource);
SubsetElementInsert ( 'Currency Type', ViewNameSource, pCurrencyType, 1);

#Create currencyFrom
sMDX = '{TM1SORT( {TM1FILTERBYLEVEL( { HIERARCHIZE( {TM1SUBSETALL( [Currency From] )} ) }, 0)}, ASC)}';
SubsetCreatebyMDX( ViewNameSource, sMDX);

#Create currencyTo
sMDX = '{TM1SORT( {TM1FILTERBYLEVEL( { HIERARCHIZE( {TM1SUBSETALL( [Currency To] )} ) }, 0)}, ASC)}';
SubsetCreatebyMDX( ViewNameSource, sMDX);


#Create Fiscal Months
vMonthStart = STRINGTONUMBER ( pMonthStart ) ;
vMonthEnd = STRINGTONUMBER ( pMonthEnd ) ;

#Create Months
i = vMonthStart ;
vMonthNum ='' ;
sMDX = '{ ' ;
WHILE ( i<= vMonthEnd ) ;
     IF ( i <10 ) ;
        vMonthNum = 'M0' | NUMBERTOSTRING ( i ) ;
     ELSE ;
        vMonthNum = 'M' | NUMBERTOSTRING ( i ) ;
     ENDIF;
    sMDX = sMDX | '[Fiscal Months].[' | vMonthNum  | '] ' ;
    i = i + 1 ;
    IF ( i <= vMonthEnd ) ;
        sMDX = sMDX | ' , ' ; 
    ENDIF ;
END;
sMDX = sMDX | ' } ' ;
SubsetCreatebyMDX( ViewNameSource, sMDX);

# create year
SubsetCreate ('Fiscal Years', ViewNameSource);
SubsetElementInsert ( 'Fiscal Years',  ViewNameSource, pSourceYear, 1);

sMDX = '{TM1FILTERBYLEVEL( {TM1SUBSETALL( [Currency Measures] )}, 0)}';
SubsetCreatebyMDX( ViewNameSource, sMDX);

ViewCreate( CubeName, ViewNameSource);
ViewSubsetAssign (CubeName, ViewNameSource, 'Versions', ViewNameSource);
ViewSubsetAssign (CubeName, ViewNameSource, 'Company', ViewNameSource);
ViewSubsetAssign (CubeName, ViewNameSource, 'CurrencyType', ViewNameSource);
ViewSubsetAssign (CubeName, ViewNameSource, 'Currency From', ViewNameSource);
ViewSubsetAssign (CubeName, ViewNameSource, 'Currency To', ViewNameSource);
ViewSubsetAssign (CubeName, ViewNameSource, 'Fiscal Years', ViewNameSource);
ViewSubsetAssign (CubeName, ViewNameSource, 'Fiscal Months', ViewNameSource);
ViewSubsetAssign (CubeName, ViewNameSource, 'Currency Measures', ViewNameSource);

ViewExtractSkipCalcsSet(CubeName, ViewNameSource, 0);
ViewExtractSkipZeroesSet(CubeName, ViewNameSource, 1);

# Set new views as the datasource:
    DatasourceNameForServer = CubeName;
    DatasourceCubeView = ViewNameSource;


#------------------Create Zero out view 

#  Destroy previous views and subsets for forecast transfer (in case they currently exist)
ViewDestroy (CubeName, ViewNameZero);
SubsetDestroy ('Versions', ViewNameZero);
SubsetDestroy ('Fiscal Years', ViewNameZero);
SubsetDestroy ('Currency Type', ViewNameZero);

#Create Currency Type
SubsetCreate ('CurrencyType', ViewNameZero);
SubsetElementInsert ( 'Currency Type', ViewNameZero, pCurrencyTypeTo, 1);

# create Version
SubsetCreate ('Versions', ViewNameZero);
SubsetElementInsert ( 'Versions',  ViewNameZero, pTargetVersion, 1);

# create Year
SubsetCreate ('Fiscal Years', ViewNameZero);
SubsetElementInsert ( 'Fiscal Years',  ViewNameZero, pTargetYear, 1);

ViewCreate( CubeName, ViewNameZero);
ViewSubsetAssign (CubeName, ViewNameZero, 'Versions', ViewNameZero);
ViewSubsetAssign (CubeName, ViewNameZero, 'Company', ViewNameSource);
ViewSubsetAssign (CubeName, ViewNameZero, 'Currency From', ViewNameSource);
ViewSubsetAssign (CubeName, ViewNameZero, 'Currency To', ViewNameSource);
ViewSubsetAssign (CubeName, ViewNameZero, 'Fiscal Years', ViewNameZero);
ViewSubsetAssign (CubeName, ViewNameZero, 'Fiscal Months', ViewNameSource);
ViewSubsetAssign (CubeName, ViewNameZero, 'Currency Measures', ViewNameSource);
ViewSubsetAssign (CubeName, ViewNameZero, 'Currency Type', ViewNameZero);

ViewZeroOut(CubeName, ViewNameZero);
#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****



#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****

vCurTypeTo=pCurrencyTypeTo;
IF(CellisUpdateable(CubeName, pTargetVersion,vCo,vCurTypeTo,vCurFrom,vCurTo,vFM,pTargetYear,vCM )=1);
CELLPUTN(vValue, CubeName, pTargetVersion,vCo,vCurTypeTo,vCurFrom,vCurTo,vFM,pTargetYear,vCM );
ENDIF;


IF ( 1=1);
IF (vRecNo = 0 );

      ASCIIOUTPUT(vOuputLocationString,'Version','Company','Currency To','Currency Type','Currency To','Fiscal Months','Fiscal Years','Rate', 'Value' );

ENDIF;

      ASCIIOUTPUT(vOuputLocationString, vVersions,vCo,vCurType,vCurFrom,vCurTo,vFM,vFY,NumberToString(vValue) );

ENDIF;

vRecNo = vRecNo + 1;
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****


CUBESETLOGCHANGES(CubeName, 1);


IF( 1 = 1 );
#  Destroy previous views and subsets for forecast transfer
ViewDestroy (CubeName, ViewNameSource);
ViewDestroy (CubeName, ViewNameZero);
SubsetDestroy ('Versions', ViewNameSource);
SubsetDestroy ('Company', ViewNameSource);
SubsetDestroy ('Currency Type', ViewNameSource);
SubsetDestroy ('Currency From', ViewNameSource);
SubsetDestroy ('Currency To', ViewNameSource);
SubsetDestroy ('Fiscal Months', ViewNameSource);
SubsetDestroy ('Fiscal Years', ViewNameSource);
SubsetDestroy ('Currency Measures', ViewNameSource);
SubsetDestroy ('Versions', ViewNameZero);
SubsetDestroy ('Fiscal Years', ViewNameZero);
SubsetDestroy ('Currency Type', ViewNameZero);

ENDIF;
#endregion