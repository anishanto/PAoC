#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****

############Constants
cClient = CELLGETS('Global Control', 'Client Name', 'String');
cClientServerName = CELLGETS('Global Control', 'Client Server Name', 'String');
cProcessName = GetProcessName();
cTimeStamp = TimST(Now,'\Y\m\d\h\i\s');
sRandomInt = NumbertoString( INT( RAND() * 1000));
cDebugFile  = GetProcessErrorFileDirectory|cProcessName|'.'|cTimeStamp;
sZeroData = cProcessName|' Zero';
sMonth = 'M03';
sMonthP = DimensionElementPrincipalName('Fiscal Months','M01');
sMonthName = ATTRS('Fiscal Months',sMonthP,'Name');
#######Define Time


sCurrentYear = SUBST(today(1),1,4);
sNextYear = STR(NUMBR(SUBST(today(1),1,4))+1,4,0);

IF(sMonthName@='Nov' % sMonthName@='Dec' % sMonthName@='Jan' );
    sYear = sCurrentYear;
   Else;
    sYear = sNextYear;
EndIf;

sPriorYear = STR(NUMBR(sYear)-2,4,0);
sPriorYear1 = STR(NUMBR(sYear)-3,4,0);
sPriorYear2 = STR(NUMBR(sYear)-4,4,0);
sPriorYear3 = STR(NUMBR(sYear)-5,4,0);
sPriorYear4 = STR(NUMBR(sYear)-6,4,0);




#########Check Actuals have been loaded into parameter month for current year
sCYActuals = CELLGETN('Opex Detail Cube','Actuals','Local',sYear,sMonth,'All Companies','SH1','SH1','SH1','SH1','Total','Total Amount')
                     +CELLGETN('Opex Detail Cube','Actuals','USD',sYear,sMonth,'All Companies','SH1','SH1','SH1','SH1','Total','Total Amount')
                     +CELLGETN('Opex Detail Cube','Actuals','AUD',sYear,sMonth,'All Companies','SH1','SH1','SH1','SH1','Total','Total Amount');
sCYActuals2 = CELLGETN('Opex Detail Analysis Cube','Actuals','All Currency',sYear,sMonth,'All Companies','SH1','SH1','SH1','SH1','SH1','No Scale','Total Amount');




#Clear out Views
IF( ViewExists('Opex Detail Cube', sZeroData ) = 1);
ViewDestroy( 'Opex Detail Cube', sZeroData );
EndIf;

IF( ViewExists('Opex Detail Analysis Cube', sZeroData ) = 1);
ViewDestroy( 'Opex Detail Analysis Cube', sZeroData );
EndIf;




################Define Subsets to Delete

#############Subset Parameters
#Fiscal Years

IF(SubsetExists('Fiscal Years', sZeroData) = 1);
     SubsetDestroy('Fiscal Years', sZeroData);
EndIf;

sMDX = '{[Fiscal Years].['|sPriorYear|'],[Fiscal Years].['|sPriorYear1|'],[Fiscal Years].['|sPriorYear2|'],[Fiscal Years].['|sPriorYear3|'],[Fiscal Years].['|sPriorYear4|']}';

SubsetCreatebyMDX( sZeroData, sMDX);

# create SubAccounts
IF(SubsetExists('SubAccounts', sZeroData) = 1);
     SubsetDestroy('SubAccounts', sZeroData);
EndIf;

sMDX = '{TM1SUBSETALL( [SubAccounts] )}';
SubsetCreatebyMDX( sZeroData, sMDX);

# create GL Accounts

IF(SubsetExists('GL_Accounts', sZeroData) = 1);
     SubsetDestroy('GL_Accounts', sZeroData);
EndIf;

sMDX = '{TM1SUBSETALL( [GL_Accounts] )}';
SubsetCreatebyMDX( sZeroData, sMDX);


#Create BusUnits
IF(SubsetExists('BusUnits', sZeroData) = 1);
     SubsetDestroy('BusUnits', sZeroData);
EndIf;

sMDX = '{TM1SUBSETALL( [BusUnits] )}';
SubsetCreatebyMDX( sZeroData, sMDX);

# create Subledger
IF(SubsetExists('Subledger', sZeroData) = 1);
     SubsetDestroy('Subledger', sZeroData);
EndIf;


sMDX = '{TM1SUBSETALL( [Subledger] )}';
SubsetCreatebyMDX( sZeroData, sMDX);

# create Vendor
IF(SubsetExists('Vendor', sZeroData) = 1);
     SubsetDestroy('Vendor', sZeroData);
EndIf;

sMDX = '{TM1SUBSETALL( [Vendor] )}';
SubsetCreatebyMDX( sZeroData, sMDX);

# create Company
IF(SubsetExists('Company', sZeroData) = 1);
     SubsetDestroy('Company', sZeroData);
EndIf;

sMDX = '{TM1SUBSETALL( [Company] )}';
SubsetCreatebyMDX( sZeroData, sMDX);

# create Versions_PM
IF(SubsetExists('Versions_PM', sZeroData) = 1);
     SubsetDestroy('Versions_PM', sZeroData);
EndIf;

sMDX = '{TM1SUBSETALL( [Versions_PM] )}';
SubsetCreatebyMDX( sZeroData, sMDX);

# create Versions
IF(SubsetExists('Versions', sZeroData) = 1);
     SubsetDestroy('Versions', sZeroData);
EndIf;


sMDX = '{TM1SUBSETALL( [Versions] )}';
SubsetCreatebyMDX( sZeroData, sMDX);

# create Currency_PM
IF(SubsetExists('Currency_PM', sZeroData) = 1);
     SubsetDestroy('Currency_PM', sZeroData);
EndIf;

 
sMDX = '{TM1SUBSETALL( [Currency_PM] )}';
SubsetCreatebyMDX( sZeroData, sMDX);

# create Currency
IF(SubsetExists('Currency', sZeroData) = 1);
     SubsetDestroy('Currency', sZeroData);
EndIf;

sMDX = '{TM1SUBSETALL( [Currency] )}';
SubsetCreatebyMDX( sZeroData, sMDX);

# create Fiscal Months
IF(SubsetExists('Fiscal Months', sZeroData) = 1);
     SubsetDestroy('Fiscal Months', sZeroData);
EndIf;

sMDX = '{TM1SUBSETALL( [Fiscal Months] )}';
SubsetCreatebyMDX( sZeroData, sMDX);

# create Detail Measures
IF(SubsetExists('Detail Measures', sZeroData) = 1);
     SubsetDestroy('Detail Measures', sZeroData);
EndIf;

sMDX = '{TM1SORT( {TM1FILTERBYLEVEL( { HIERARCHIZE( {TM1SUBSETALL( [Detail Measures] )} ) }, 0)}, ASC)}';

SubsetCreatebyMDX( sZeroData, sMDX);

# create Scale Measures
IF(SubsetExists('Scale Measure', sZeroData) = 1);
     SubsetDestroy('Scale Measure', sZeroData);
EndIf;

sMDX = '{TM1SORT( {TM1FILTERBYLEVEL( { HIERARCHIZE( {TM1SUBSETALL( [Scale Measure] )} ) }, 0)}, ASC)}';
SubsetCreatebyMDX( sZeroData, sMDX);


###############Detail Cube


IF(DIMIX('Fiscal Years',sCurrentYear) >0 & sCYActuals <>0);
    cCube = 'Opex Detail Cube'; 
 ####Destroy View if preent
IF( ViewExists(cCube, sZeroData ) = 1);
   ViewDestroy( cCube, sZeroData );
EndIf;

####CreateView for Detail Cube
ViewCreate( cCube, sZeroData );
ViewExtractSkipZeroesSet (cCube, sZeroData, 1);
ViewExtractSkipRuleValuesSet (cCube, sZeroData, 1);
ViewRowSuppressZeroesSet(cCube, sZeroData, 1);
ViewColumnSuppressZeroesSet(cCube, sZeroData, 1);
ViewSuppressZeroesSet(cCube, sZeroData, 1);

ViewSubsetAssign (cCube, sZeroData, 'Versions_PM', sZeroData);
ViewSubsetAssign (cCube, sZeroData, 'Company', sZeroData);
ViewSubsetAssign (cCube, sZeroData, 'Currency_PM', sZeroData);
ViewSubsetAssign (cCube, sZeroData, 'Fiscal Years', sZeroData);
ViewSubsetAssign (cCube, sZeroData, 'Fiscal Months', sZeroData);
ViewSubsetAssign (cCube, sZeroData, 'SubAccounts', sZeroData);
ViewSubsetAssign (cCube, sZeroData, 'GL_Accounts', sZeroData);
ViewSubsetAssign (cCube, sZeroData, 'BusUnits', sZeroData);
ViewSubsetAssign (cCube, sZeroData, 'Subledger', sZeroData);
ViewSubsetAssign (cCube, sZeroData, 'Vendor', sZeroData);
ViewSubsetAssign (cCube, sZeroData, 'Detail Measures', sZeroData);

ViewColumnDimensionSet(cCube, sZeroData, 'Detail Measures',1);
ViewRowDimensionSet(cCube, sZeroData, 'Versions_PM',1);
ViewRowDimensionSet(cCube, sZeroData, 'Currency_PM',2);
ViewRowDimensionSet(cCube, sZeroData, 'GL_Accounts',3);
ViewRowDimensionSet(cCube, sZeroData, 'SubLedger',4);
ViewRowDimensionSet(cCube, sZeroData, 'Vendor',5);
ViewRowDimensionSet(cCube, sZeroData, 'Company',6);
ViewRowDimensionSet(cCube, sZeroData, 'Fiscal Months',7);
ViewRowDimensionSet(cCube, sZeroData, 'Fiscal Years',8);
ViewRowDimensionSet(cCube, sZeroData, 'SubAccounts',9);
ViewRowDimensionSet(cCube, sZeroData, 'BusUnits',10);

 VIEWZEROOUT(cCube,sZeroData);
EndIf;

###############
IF(DIMIX('Fiscal Years',sCurrentYear) >0 & sCYActuals2 <>0);
    cCube = 'Opex Detail Analysis Cube'; 
 ####Destroy View if preent
IF( ViewExists(cCube, sZeroData ) = 1);
   ViewDestroy( cCube, sZeroData );
EndIf;
   ####CreateView
ViewCreate( cCube, sZeroData );
ViewExtractSkipZeroesSet (cCube, sZeroData, 1);
ViewExtractSkipRuleValuesSet (cCube, sZeroData, 1);
ViewRowSuppressZeroesSet(cCube, sZeroData, 1);
ViewColumnSuppressZeroesSet(cCube, sZeroData, 1);
ViewSuppressZeroesSet(cCube, sZeroData, 1);

ViewSubsetAssign (cCube, sZeroData, 'Versions', sZeroData);
ViewSubsetAssign (cCube, sZeroData, 'Company', sZeroData);
ViewSubsetAssign (cCube, sZeroData, 'Currency', sZeroData);
ViewSubsetAssign (cCube, sZeroData, 'Fiscal Years', sZeroData);
ViewSubsetAssign (cCube, sZeroData, 'Fiscal Months', sZeroData);
ViewSubsetAssign (cCube, sZeroData, 'SubAccounts', sZeroData);
ViewSubsetAssign (cCube, sZeroData, 'GL_Accounts', sZeroData);
ViewSubsetAssign (cCube, sZeroData, 'BusUnits', sZeroData);
ViewSubsetAssign (cCube, sZeroData, 'Subledger', sZeroData);
ViewSubsetAssign (cCube, sZeroData, 'Vendor', sZeroData);
ViewSubsetAssign (cCube, sZeroData, 'Detail Measures', sZeroData);
ViewSubsetAssign (cCube, sZeroData, 'Scale Measure', sZeroData);

ViewColumnDimensionSet(cCube, sZeroData, 'Detail Measures',1);
ViewRowDimensionSet(cCube, sZeroData, 'Versions',1);
ViewRowDimensionSet(cCube, sZeroData, 'Currency',2);
ViewRowDimensionSet(cCube, sZeroData, 'GL_Accounts',3);
ViewRowDimensionSet(cCube, sZeroData, 'SubLedger',4);
ViewRowDimensionSet(cCube, sZeroData, 'Vendor',5);
ViewRowDimensionSet(cCube, sZeroData, 'Scale Measure',6);
ViewRowDimensionSet(cCube, sZeroData, 'Company',6);
ViewRowDimensionSet(cCube, sZeroData, 'Fiscal Months',7);
ViewRowDimensionSet(cCube, sZeroData, 'Fiscal Years',8);
ViewRowDimensionSet(cCube, sZeroData, 'SubAccounts',9);
ViewRowDimensionSet(cCube, sZeroData, 'BusUnits',10);

VIEWZEROOUT(cCube,sZeroData);


EndIf;
#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****

############Delete View and Subset

IF(1=1);

IF( ViewExists(cCube, sZeroData ) = 1);
     ViewDestroy( 'Opex Detail Cube', sZeroData );
EndIf;

IF( ViewExists(cCube, sZeroData ) = 1);
     ViewDestroy( 'Opex Detail Analysis Cube', sZeroData );
EndIf;




#Fiscal Years

#IF(SubsetExists('Fiscal Years', sZeroData) = 1);
#     SubsetDestroy('Fiscal Years', sZeroData);
#EndIf;

# create SubAccounts
IF(SubsetExists('SubAccounts', sZeroData) = 1);
     SubsetDestroy('SubAccounts', sZeroData);
EndIf;
 
# create GL Accounts

IF(SubsetExists('GL_Accounts', sZeroData) = 1);
     SubsetDestroy('GL_Accounts', sZeroData);
EndIf;

#Create BusUnits
IF(SubsetExists('BusUnits', sZeroData) = 1);
     SubsetDestroy('BusUnits', sZeroData);
EndIf;

# create Subledger
IF(SubsetExists('Subledger', sZeroData) = 1);
     SubsetDestroy('Subledger', sZeroData);
EndIf;

# create Vendor
IF(SubsetExists('Vendor', sZeroData) = 1);
     SubsetDestroy('Vendor', sZeroData);
EndIf;

# create Company
IF(SubsetExists('Company', sZeroData) = 1);
     SubsetDestroy('Company', sZeroData);
EndIf;

# create Versions_PM
IF(SubsetExists('Versions_PM', sZeroData) = 1);
     SubsetDestroy('Versions_PM', sZeroData);
EndIf;
 
# create Versions
IF(SubsetExists('Versions', sZeroData) = 1);
     SubsetDestroy('Versions', sZeroData);
EndIf;

# create Currency_PM
IF(SubsetExists('Currency_PM', sZeroData) = 1);
     SubsetDestroy('Currency_PM', sZeroData);
EndIf;

# create Currency
IF(SubsetExists('Currency', sZeroData) = 1);
     SubsetDestroy('Currency', sZeroData);
EndIf;

# create Fiscal Months
IF(SubsetExists('Fiscal Months', sZeroData) = 1);
     SubsetDestroy('Fiscal Months', sZeroData);
EndIf;

# create Detail Measures
IF(SubsetExists('Detail Measures', sZeroData) = 1);
     SubsetDestroy('Detail Measures', sZeroData);
EndIf;

 
# create Scale Measures
IF(SubsetExists('Scale Measure', sZeroData) = 1);
     SubsetDestroy('Scale Measure', sZeroData);
EndIf;

EndIf;
#endregion