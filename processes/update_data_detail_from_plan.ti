#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****

CubeName = 'Opex Plan Cube';
ViewNameSource =  'VE-' | CubeName | '-CopyToAnalysis' ;
vSCur = 'Local';
ZCubeName = 'Opex Detail Cube';
ViewNameZero =  'VE-' | ZCubeName | '-AnalysisZero' ;
cubGlobalControl = 'Global Control';
vServer=CELLGETS(cubGlobalControl, 'Client Server Name', 'String');
vVendorType=CELLGETN(cubGlobalControl, 'Client Vendor Type', 'Value');
vSubledgerType=CELLGETN(cubGlobalControl, 'Client Subledger Type', 'Value');
vSM = 'No Scale';
vRecNo = 0;

vFileName = 'PlanToAnalysisCubeLoadValue.csv';
vOuputLocationString = '..\DataSources\Exports\' | vFileName;

CUBESETLOGCHANGES(CubeName, 0);
CUBESETLOGCHANGES(ZCubeName, 0);

# create source view

#  Destroy previous views and subsets for forecast transfer
ViewDestroy (CubeName, ViewNameSource);
SubsetDestroy ('Versions_PM', ViewNameSource);
SubsetDestroy ('Company', ViewNameSource);
SubsetDestroy ('Currency_PM', ViewNameSource);
SubsetDestroy ('Fiscal Months', ViewNameSource);
SubsetDestroy ('Fiscal Years', ViewNameSource);
SubsetDestroy ('SubAccounts', ViewNameSource);
SubsetDestroy ('GL_Accounts', ViewNameSource);
SubsetDestroy ('BusUnits', ViewNameSource);
SubsetDestroy ('Plan Measures', ViewNameSource);

# Create views and subsets for Export
#Create Version
SubsetCreate ('Versions_PM', ViewNameSource);
SubsetElementInsert ( 'Versions_PM',  ViewNameSource, pSourceVersion, 1);

#Create Company
IF(pCompany @= 'All Companies') ;
    sMDX = '{TM1SORT( {TM1FILTERBYLEVEL( { HIERARCHIZE( {TM1SUBSETALL( [Company] )} ) }, 0)}, ASC)}';
ELSE;
    sMDX = '{TM1FILTERBYPATTERN( {TM1SUBSETALL( [Company] )}, "' |  pCompany | '")}';
ENDIF;
SubsetCreatebyMDX( ViewNameSource, sMDX);

#Create currency
SubsetCreate ('Currency_PM', ViewNameSource);
SubsetElementInsert ( 'Currency_PM',  ViewNameSource,'Local', 1);

#Create Months
sMDX = '{TM1SORT( {TM1FILTERBYLEVEL( { HIERARCHIZE( {TM1SUBSETALL( [Fiscal Months] )} ) }, 0)}, ASC)}';
SubsetCreatebyMDX( ViewNameSource, sMDX);

# create year
SubsetCreate ('Fiscal Years', ViewNameSource);
SubsetElementInsert ( 'Fiscal Years',  ViewNameSource, pSourceYear, 1);

# create SubAccounts
sMDX = '{TM1SORT( {TM1FILTERBYLEVEL( { HIERARCHIZE( {TM1SUBSETALL( [SubAccounts] )} ) }, 0)}, ASC)}';
SubsetCreatebyMDX( ViewNameSource, sMDX);

#Create GL_Accounts
sMDX = '{TM1SORT( {TM1FILTERBYLEVEL( { HIERARCHIZE( {TM1SUBSETALL( [GL_Accounts] )} ) }, 0)}, ASC)}';
SubsetCreatebyMDX( ViewNameSource, sMDX);

#Create BusUnits
sMDX = '{TM1SORT( {TM1FILTERBYLEVEL( { HIERARCHIZE( {TM1SUBSETALL( [BusUnits] )} ) }, 0)}, ASC)}';
SubsetCreatebyMDX( ViewNameSource, sMDX);

sMDX = '{FILTER( {TM1SUBSETALL( [Plan Measures] )},[Plan Measures].[MeasureType] = "Value")}';
SubsetCreatebyMDX( ViewNameSource, sMDX);

ViewCreate( CubeName, ViewNameSource);
ViewSubsetAssign (CubeName, ViewNameSource, 'Versions_PM', ViewNameSource);
ViewSubsetAssign (CubeName, ViewNameSource, 'Company', ViewNameSource);
ViewSubsetAssign (CubeName, ViewNameSource, 'Currency_PM', ViewNameSource);
ViewSubsetAssign (CubeName, ViewNameSource, 'SubAccounts', ViewNameSource);
ViewSubsetAssign (CubeName, ViewNameSource, 'GL_Accounts', ViewNameSource);
ViewSubsetAssign (CubeName, ViewNameSource, 'Fiscal Years', ViewNameSource);
ViewSubsetAssign (CubeName, ViewNameSource, 'Fiscal Months', ViewNameSource);
ViewSubsetAssign (CubeName, ViewNameSource, 'BusUnits', ViewNameSource);
ViewSubsetAssign (CubeName, ViewNameSource, 'Plan Measures', ViewNameSource);

ViewRowDimensionSet(CubeName, ViewNameSource,  'Versions_PM', 1);
ViewRowDimensionSet (CubeName, ViewNameSource, 'Company', 2);
ViewRowDimensionSet (CubeName, ViewNameSource, 'Currency_PM', 3);
ViewRowDimensionSet(CubeName, ViewNameSource, 'Fiscal Months',4);
ViewRowDimensionSet(CubeName, ViewNameSource, 'Fiscal Years', 5);
ViewRowDimensionSet (CubeName, ViewNameSource, 'SubAccounts',6);
ViewRowDimensionSet (CubeName, ViewNameSource, 'GL_Accounts', 7);
ViewRowDimensionSet (CubeName, ViewNameSource, 'BusUnits', 8);
ViewRowDimensionSet (CubeName, ViewNameSource, 'Plan Measures',9);

ViewExtractSkipCalcsSet(CubeName, ViewNameSource, 1);
ViewExtractSkipZeroesSet(CubeName, ViewNameSource, 1);

# Set new views as the datasource:
    DatasourceNameForServer = CubeName;
    DatasourceCubeView = ViewNameSource;


#------------------Create Zero out view 

#  Destroy previous views and subsets for forecast transfer (in case they currently exist)
ViewDestroy (ZCubeName, ViewNameZero);
SubsetDestroy ('Versions_PM', ViewNameZero);
SubsetDestroy ('Company', ViewNameZero);
SubsetDestroy ('Currency_PM', ViewNameZero);
SubsetDestroy ('Fiscal Months', ViewNameZero);
SubsetDestroy ('Fiscal Years', ViewNameZero);
SubsetDestroy ('SubAccounts', ViewNameZero);
SubsetDestroy ('GL_Accounts', ViewNameZero);
SubsetDestroy ('BusUnits', ViewNameZero);
SubsetDestroy ('Subledger', ViewNameZero);
SubsetDestroy ('Vendor', ViewNameZero);
SubsetDestroy ('Detail Measures', ViewNameZero);

# Create views and subsets for Export
#Create Version
IF ( DIMIX ( 'Versions_PM', pTargetVersion ) = 0 ) ;
     DIMENSIONELEMENTINSERTDIRECT( 'Versions_PM', '', pTargetVersion, 'N' );
     DIMENSIONELEMENTCOMPONENTADDDIRECT ( 'Versions_PM', 'All Versions', pTargetVersion, 1 ) ;
ENDIF;
SubsetCreate ('Versions_PM', ViewNameZero);
SubsetElementInsert ( 'Versions_PM',  ViewNameZero, pTargetVersion, 1);

#Create Company
IF(pCompany @= 'All Companies') ;
    sMDX = '{TM1SORT( {TM1FILTERBYLEVEL( { HIERARCHIZE( {TM1SUBSETALL( [Company] )} ) }, 0)}, ASC)}';
ELSE;
    sMDX = '{TM1FILTERBYPATTERN( {TM1SUBSETALL( [Company] )}, "' |  pCompany | '")}';
ENDIF;
SubsetCreatebyMDX( ViewNameZero, sMDX);

#Create currency
sMDX = '{TM1FILTERBYLEVEL( {TM1SUBSETALL( [Currency_PM] )}, 0)}';
SubsetCreatebyMDX( ViewNameZero, sMDX);

# create SubAccounts
sMDX = '{TM1SORT( {TM1FILTERBYLEVEL( { HIERARCHIZE( {TM1SUBSETALL( [SubAccounts] )} ) }, 0)}, ASC)}';
SubsetCreatebyMDX( ViewNameZero, sMDX);

#Create GL_Accounts
sMDX = '{TM1SORT( {TM1FILTERBYLEVEL( { HIERARCHIZE( {TM1SUBSETALL( [GL_Accounts] )} ) }, 0)}, ASC)}';
SubsetCreatebyMDX( ViewNameZero, sMDX);


#Create Subledger
sMDX = '{TM1SORT( {TM1FILTERBYLEVEL( { HIERARCHIZE( {TM1SUBSETALL( [Subledger] )} ) }, 0)}, ASC)}';
SubsetCreatebyMDX( ViewNameZero, sMDX);

#Create Vendor
sMDX = '{TM1SORT( {TM1FILTERBYLEVEL( { HIERARCHIZE( {TM1SUBSETALL( [Vendor] )} ) }, 0)}, ASC)}';
SubsetCreatebyMDX( ViewNameZero, sMDX);

#Create Months
sMDX = '{TM1SORT( {TM1FILTERBYLEVEL( { HIERARCHIZE( {TM1SUBSETALL( [Fiscal Months] )} ) }, 0)}, ASC)}';
SubsetCreatebyMDX( ViewNameZero, sMDX);

# create year
IF ( DIMIX ( 'Fiscal Years', pTargetYear ) = 0 ) ;
     DIMENSIONELEMENTINSERTDIRECT( 'Fiscal Years', '', pTargetYear, 'N' );
     DIMENSIONELEMENTCOMPONENTADDDIRECT ( 'Fiscal Years', 'All Fiscal Years', pTargetYear, 1 ) ;
ENDIF;
SubsetCreate ('Fiscal Years', ViewNameZero);
SubsetElementInsert ( 'Fiscal Years',  ViewNameZero, pTargetYear, 1);


#Create BusUnits
sMDX = '{TM1SORT( {TM1FILTERBYLEVEL( {TM1SUBSETALL( [BusUnits] )}, 0)}, ASC)}';
SubsetCreatebyMDX( ViewNameZero, sMDX);


#Create Measure
sMDX = '{FILTER( {TM1SUBSETALL( [Detail Measures] )},[Detail Measures].[MeasureType] = "Value")}';
SubsetCreatebyMDX( ViewNameZero, sMDX);

ViewCreate( ZCubeName, ViewNameZero);
ViewSubsetAssign (ZCubeName, ViewNameZero, 'Versions_PM', ViewNameZero);
ViewSubsetAssign (ZCubeName, ViewNameZero, 'Currency_PM', ViewNameZero);
ViewSubsetAssign (ZCubeName, ViewNameZero, 'Company', ViewNameZero);
ViewSubsetAssign (ZCubeName, ViewNameZero, 'SubAccounts', ViewNameZero);
ViewSubsetAssign (ZCubeName, ViewNameZero, 'GL_Accounts', ViewNameZero);
ViewSubsetAssign (ZCubeName, ViewNameZero, 'Fiscal Years', ViewNameZero);
ViewSubsetAssign (ZCubeName, ViewNameZero, 'Fiscal Months', ViewNameZero);
ViewSubsetAssign (ZCubeName, ViewNameZero, 'BusUnits', ViewNameZero);
ViewSubsetAssign (ZCubeName, ViewNameZero, 'Subledger', ViewNameZero);
ViewSubsetAssign (ZCubeName, ViewNameZero, 'Vendor', ViewNameZero);
ViewSubsetAssign (ZCubeName, ViewNameZero, 'Detail Measures', ViewNameZero);

ViewRowDimensionSet(ZCubeName, ViewNameZero,  'Versions_PM', 1);
ViewRowDimensionSet (ZCubeName, ViewNameZero, 'Currency_PM', 2);
ViewRowDimensionSet (ZCubeName, ViewNameZero, 'Company', 3);
ViewRowDimensionSet(ZCubeName, ViewNameZero, 'Fiscal Months',4);
ViewRowDimensionSet(ZCubeName, ViewNameZero, 'Fiscal Years', 5);
ViewRowDimensionSet (ZCubeName, ViewNameZero, 'SubAccounts',6);
ViewRowDimensionSet (ZCubeName, ViewNameZero, 'GL_Accounts', 7);
ViewRowDimensionSet (ZCubeName, ViewNameZero, 'BusUnits', 8);
ViewRowDimensionSet(ZCubeName, ViewNameZero, 'Subledger',9);
ViewRowDimensionSet(ZCubeName, ViewNameZero, 'Subledger',10);
ViewRowDimensionSet (ZCubeName, ViewNameZero, 'Detail Measures',11);

ViewZeroOut(ZCubeName, ViewNameZero);
#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****




#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****


#Create Subledger
IF(vSubledgerType=1);
vSBL='NA';
ELSE;
vSBL ='All Subledger and Other';
ENDIF;

#Create Vendor
IF(vVendorType=1);
vVendor='NA';
ELSE;
vVendor='All Vendor and Other';
ENDIF;

IF (VALUE_IS_STRING=0);

# Copy string values for elements on all source levels

      CELLPUTN(vValue, ZCubeName, pTargetVersion,vCur,pTargetYear,vFM,vCo,vSub,vGLA,vSBL,vBU,vVendor, vPM );

ELSE;

ITEMSKIP;

ENDIF;

IF ( 1=1);
IF (vRecNo = 0 );

      ASCIIOUTPUT(vOuputLocationString,'Version','Currency','Fiscal Month','FiscalYear','Company','Sub Account','GL Account','Subledger', 'Bus Unit', 'Vendor', 'Measure', 'Value' );

ENDIF;

      ASCIIOUTPUT(vOuputLocationString,pTargetVersion,vCo,vCur,vFM,pTargetYear,vSub,vGLA,vSBL,vBU,vSM,vVendor, vPM, NumberToString(vValue) );

ENDIF;

vRecNo = vRecNo + 1;


#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****


CUBESETLOGCHANGES(CubeName, 1);
CUBESETLOGCHANGES(ZCubeName, 1);

IF( 1 = 1 );
#  Destroy previous views and subsets for forecast transfer
ViewDestroy (CubeName, ViewNameSource);
SubsetDestroy ('Versions_PM', ViewNameSource);
SubsetDestroy ('Company', ViewNameSource);
SubsetDestroy ('Currency_PM', ViewNameSource);
SubsetDestroy ('Fiscal Months', ViewNameSource);
SubsetDestroy ('Fiscal Years', ViewNameSource);
SubsetDestroy ('SubAccounts', ViewNameSource);
SubsetDestroy ('GL_Accounts', ViewNameSource);
SubsetDestroy ('BusUnits', ViewNameSource);
SubsetDestroy ('Plan Measures', ViewNameSource);

ViewDestroy (ZCubeName, ViewNameZero);
SubsetDestroy ('Versions_PM', ViewNameZero);
SubsetDestroy ('Company', ViewNameZero);
SubsetDestroy ('Currency_PM', ViewNameZero);
SubsetDestroy ('Fiscal Months', ViewNameZero);
SubsetDestroy ('Fiscal Years', ViewNameZero);
SubsetDestroy ('SubAccounts', ViewNameZero);
SubsetDestroy ('GL_Accounts', ViewNameZero);
SubsetDestroy ('BusUnits', ViewNameZero);
SubsetDestroy ('Subledger', ViewNameZero);
SubsetDestroy ('Vendor', ViewNameZero);
SubsetDestroy ('Detail Measures', ViewNameZero);


ENDIF;
#endregion