#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****

#============================        NOTES     =================================================
#
#  Adds new dimension element in appropriate hierarchies
#
#==========================================================================================

#==========================================================================================

#===============================    Process statistics  ===========================================
cProcess = GETPROCESSNAME ;
sProcess = TRIM (cProcess);
WHILE ( SCAN ( ' ', sProcess )  > 0 );
    sProcess = DELET ( sProcess, SCAN ( ' ' , sProcess ) , 1 ) ;
END ;

sUser = TM1USER() ;

sNow = TIMST( NOW , '\M \D, \Y at \H \p \i min \s sec' ) ;
vNowStart = NOW ;

cubMessages = '}ElementAttributes_}Processes';

#========================================================================================

#============================= Define User Log =============================================
cubGblCube = 'Global Settings';
logPath = '..\logs\tunit\';
exportPath = '..\DataSources\Exports\';

IF ( SUBST ( logPath , LONG ( logPath ) - 1 , 1 ) @<> '\' ) ;
    logPath = logPath | '\' ;
ENDIF;

logName = TRIM ( sProcess ) | '_' | sNow | '.log' ;
errName =  TRIM ( sProcess ) | '_' | sNow | '.err' ;
logNameMeta = TRIM ( sProcess ) | '_' | sNow | '-KICKOUT.csv' ;
errNameMeta = TRIM ( sProcess ) | '_' | sNow | '-META.err' ;
logFile = logPath | logName ;
errFile = logPath | errName ;
logFileMeta = logPath | logNameMeta ;
errFileMeta = logPath | errNameMeta ;

#===================================================================================


#===============================   Process Variables  ====================================

elmSuccessMessage = 'Success' ;
elmFailureMessage = 'Failure' ;

vProcessStatusCube = 'Process Status';
vDimension = 'Portfolio Assumptions';


vFlag = 0;
vExists = 0;

vTimeStamp = TIMST(NOW, '\m-\d-\Y @ \H:\i \p PST');
vMessage = 'No Message';


###################################################Check Alias has been added
sElement = pElement;
IF(sElement@=' ');
      vFlag = 1;
      vMessage = 'ERROR: The Portfolio Assumptions Name is Blank.';
       CELLPUTS ( vMessage, cubMessages, cProcess, elmFailureMessage);
      PROCESSQUIT;
ENDIF;

#Insert new element
sDimName = 'Portfolio Assumptions' ;
#sDimParent = '';
IF(DIMIX(sDimName, sElement ) = 0);
       DimensionElementInsert(sDimName, '', sElement, 'N');
#       DimensionElementComponentAdd(sDimName, sDimParent, sElement, 1);
       vMessageSuccess = 'SUCCESS: Element ' | sElement | ' added to the TM1 ' | vDimension | ' list.' ;

ELSE;
      vFlag = 1;
      vMessage = 'ERROR: The "'| sElement | ' "already exists.';
      PROCESSBREAK();
ENDIF;

#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****

sDIm='Portfolio Assumptions';

ATTRPUTS(pElement,sDim,pElement,'Name');


#Update Process Status cube with messages
CELLPUTS ( vMessageSuccess , cubMessages, cProcess, elmSuccessMessage);
CELLPUTS ( vMessage, cubMessages, cProcess, elmFailureMessage);

IF(vFlag = 1);
   ProcessQuit;
ENDIF;




#endregion